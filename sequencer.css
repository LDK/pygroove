body {
  font: 14px "Century Gothic", Futura, sans-serif;
  margin: 20px;
}
body {
	--blue-button: #3777c7;
	--blue-shadow: #275797;
	--blue-highlight: #6797c7;
	--blue-light: #d7e7f7;
	--blue-grey: #373757;
	--blue-dark: #171747;
	--green-light: #d7f7e7;
	--green-grey: #97B797;
	--green-dark: #174717;
	--white: #f7f7f7;
	--red-button: #c73737;
	--red-shadow: #672727;
	--red-highlight: #e78787;
	--grey: #373737;
	--blue-grey-light: #c7cee7;
	--disabled-highlight: #676767;
	--disabled-light: #c7c7c7;
}
input[type="range"][orient="horizontal"] {
  width: 3.5rem;
  display: inline-block;
}
input[type="range"][orient="vertical"] {
  width: .5rem;
  height: 32px;
  writing-mode: bt-lr; /* IE */
  -webkit-appearance: slider-vertical; /* WebKit */
  display: inline-block;
}
ol, ul {
  padding-left: 30px;
}

.pattern-row:after {
  clear: both;
  content: "";
  display: table;
}

.status {
  margin-bottom: 10px;
}

.status.row label {
	min-width: 3rem;
}
.cell {
  background-color: var(--blue-light);
  border: 1px solid #999;
  float: left;
  font-size: 24px;
  font-weight: bold;
  line-height: 34px;
  height: 32px;
  margin-right: -1px;
  margin-top: -1px;
  padding: 0;
  text-align: center;
  width: 3.125%;
}
.disabled .cell {
  background-color: var(--disabled-light);
}
.cell:focus {
  outline: none;
}

.cell:nth-child(1),
.cell:nth-child(5),
.cell:nth-child(9),
.cell:nth-child(13),
.cell:nth-child(17),
.cell:nth-child(21),
.cell:nth-child(25),
.cell:nth-child(29)
{
  background-color: var(--blue-highlight);
}

.disabled .cell:nth-child(1),
.disabled .cell:nth-child(5),
.disabled .cell:nth-child(9),
.disabled .cell:nth-child(13),
.disabled .cell:nth-child(17),
.disabled .cell:nth-child(21),
.disabled .cell:nth-child(25),
.disabled .cell:nth-child(29)
{
  background-color: var(--disabled-highlight);
}

.kbd-navigation .cell:focus {
  background: #ddd;
}

.song {
  display: flex;
  flex-direction: row;
}

.song-info {
  margin-left: 20px;
}

.song-pattern {
  width: 100%;
}
.song-pattern input[type="button"] {
    float: left;
    width: 6rem;
    margin-right: 1rem;
}

.hidden {
  
 display: none;  
}

.pattern-bg {
    background-color: var(--blue-grey-light);
}

span.meter-display {
	bottom: .5rem;
	color: black;
}

.disabled span {
	color: #676767;
}
span.meter-display.volume:after {
	content: 'db';
    font-size: 12px;
}

span.pan-display:before {
	content: 'Pan: ';
}

input.freq:before {
	content: 'Freq: ';
	display: block;
	    position: absolute;
	    top: -1rem;
	    color: black;
	    font-size: 12px;

}
span.meter-display.freq:after {
	content: 'Hz';
    font-size: 12px;
}

@media (max-width: 991px) {
	.cell {
		width: 6.25%;
	}	
}
@media (min-width: 992px) {
	span.meter-display {
		bottom: .5rem;
	}
}
@media (max-width: 320px) {
	.cell {
		width: 12.85%;
	}	
}
@media (max-width: 480px) {
	.cell {
		width: 6.48%;
	}	
}
@media (max-width: 575px) {
	.cell {
		width: 6.44%;
	}	
}
.row.disabled {
	
}
div.channel-options:not(.d-none) {
	background-color: tan;
}
div.channel-options .row > div {
	height: 128px;
	border-right: 1px solid white;
	background-color: #9a9a9a;
}
.disabled.row div.channel-options .row > div {
	background-color: var(--disabled-light);
}
div.powerButton{
	height: 24px;
	width: 24px;
}
div.powerButton > button {
	background-image: url(img/power-button.svg);
	background-repeat: no-repeat;
	background-size: 75%;
	-webkit-appearance: none;
	height: 100%;
	width: 100%;
	border-radius: 3rem;
	background-position: center 35%;
	background-color: #9a9a9a;
	cursor: pointer;
	outline: none !important;
}
div.powerButton > button.switchedOn {
	background-image: url(img/power-button-white.svg);
	background-color: #fa1a1a;
}
div.powerButton.gearIcon {
	height: 32px;
	width: 32px;
}
div.powerButton.gearIcon > button {
	background-image: url(img/gear-grey.svg);
	background-color: transparent;
	background-position: bottom center;
}
div.powerButton.gearIcon > button.switchedOn {
	background-image: url(img/gear-white.svg);
}
.disabled.row div.powerButton.gearIcon > button.switchedOn {
	background-image: url(img/gear-black.svg);
}
.noselect {
  -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none; /* Safari */
     -khtml-user-select: none; /* Konqueror HTML */
       -moz-user-select: none; /* Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
            user-select: none; /* Non-prefixed version, currently
                                  supported by Chrome and Opera */
}
/* The optionIndicator */
.optionIndicator ul li {
    list-style-type: none;
    break-inside: avoid;
  display: inline-block;
  position: relative;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.channel-options label {
	font-size: 12px;
}

.incrementer input[type="text"][disabled] {
    background: var(--green-grey);
}

/* Hide the browser's default radio button */
.optionIndicator ul li label input {
  position: absolute;
  opacity: 0;
}

.row.channel:not(.disabled) .optionIndicator:not(.disabled) ul li,
.row.channel:not(.disabled) .optionIndicator:not(.disabled) ul li label {
  cursor: pointer;
}

/* Create a custom radio button */
.optionIndicator ul li label .checkmark {
  position: absolute;
  top: 0;
  left: 3px;
  height: 8px;
  width: 8px;
  background-color: #6a6a6a;
  border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.row.channel:not(.disabled) .optionIndicator:not(.disabled) ul li label:hover input ~ .checkmark {
  background-color: #fff;
}

/* When the radio button is checked, add a blue background */
.optionIndicator ul li label input:checked ~ .checkmark {
    background-color: var(--disabled-light);
}
.row.channel:not(.disabled) .optionIndicator:not(.disabled)  ul li label input:checked ~ .checkmark {
  background-color: #2196F3;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.optionIndicator ul li label .checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the indicator (dot/circle) when checked */
.optionIndicator ul li label input:checked ~ .checkmark:after {
  display: block;
}

/* Style the indicator (dot/circle) */
.optionIndicator ul li label .checkmark:after {
	width: 8px;
	height: 8px;
	border-radius: 50%;
	background: var(--disabled-light);
}

/* Style the indicator (dot/circle) */
.row.channel:not(.disabled) .optionIndicator:not(.disabled)  ul li label .checkmark:after {
	width: 8px;
	height: 8px;
	border-radius: 50%;
	background: lime;
}
